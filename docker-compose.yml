services:
  mongo_db:
    container_name: db_container
    restart: unless-stopped
    image: mongo:latest
    ports:
      - "${DB_PORT:-27017}:27017"
    volumes:
      - mongo_data:/data/db

  backend:
    container_name: kanban_backend
    restart: "unless-stopped"
    build: 
      context: "./backend"
      dockerfile: Dockerfile
      args:
        - PORT=${BACKEND_PORT:-8000}
    volumes:
      - ./backend:/usr/app/backend
      - backend_node_modules:/usr/app/backend/node_modules
    command: > 
      bash -c "
        if [ '$APP_ENV' = 'development' ]; then
          npm run dev;
        else
          npm start;
        fi
      "
    ports:
      - ${BACKEND_PORT:-8000}:${BACKEND_PORT:-8000}
    env_file:
      - ./backend/.env
    depends_on:
      - mongo_db

  # frontend:
  #   container_name: kanban_frontend
  #   restart: "unless-stopped"
  #   build:
  #     context: "./frontend"
  #     dockerfile: Dockerfile
  #     args:
  #       - PORT:${FRONTEND_PORT:-3000}
  #   volumes:
  #     - ./frontend:/usr/app/frontend
  #     - frontend_node_modules:/usr/app/frontend_node_modules
  #   command: >
  #     bash -c "
  #       if [ '$APP_ENV' = 'development' ]; then
  #         npm run dev;
  #       else
  #         npm start;
  #       fi
  #     "
  #   ports:
  #     - ${FRONTEND_PORT:-3000}:${FRONTEND_PORT:-3000} 
  #   env_file:
  #     - ./frontend/.env
  #   depends_on:
  #     - backend

volumes:
  mongo_data: {}
  backend_node_modules: {}
  frontend_node_modules: {}